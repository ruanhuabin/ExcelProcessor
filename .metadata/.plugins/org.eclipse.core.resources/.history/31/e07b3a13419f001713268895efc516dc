# encoding: utf-8
from openpyxl import Workbook
from openpyxl import Workbook
from openpyxl.compat import range
from openpyxl.cell import get_column_letter
from openpyxl import load_workbook
from Logger2 import MyLogger
import logging
import math
import re
import pprint
from subprocess import Popen
from popen2 import popen4
import glob
import time
#import operator

logger = MyLogger().getLogger()
fileHandler = logger.handlers[1]
logFilename = fileHandler.baseFilename
logFileHandle = open(logFilename, "w")

def nonBlankLines(f):
    """
    Used for romoved lines that start with #
    """
    for l in f:
        line = l.rstrip()
        if line and line[0] != '#':
            yield line

def readTextFile(fileName): 
    content = []  
    with open(fileName) as f:
        for line in nonBlankLines(f):
            content.append(line)
    
    return content

def loadTextFile(fileName):
    content = readTextFile(fileName)
    headerLine = []
    if(len(content) > 0):
        headerLine = content[0].split('\t')
    
    logger.info("header num: {0}, headers are: {1}".format(len(headerLine), headerLine))
    headers = []
    dataDict = {}
    for header in headerLine:
        headers.append(header)
        dataDict[header] = {}
    
    
    lineNum = 0   
    #content中的每个元素是文件中的一行，每个元素就是个普通的字符串，这个字符串是文件中的完整一行 
    for item in content:
        item = item.split('\t')
        lineNum += 1
        itemLen = len(item)        
        logger.debug("%d:%d:%s" % (lineNum, itemLen, str(item)))
    #transpose the list of lists
    #content2是一个list，其的每一个元素也是一个list，每个元素的list中包含文件中一行的内容，每个元素list中的每一个元素是该行中的某一列对应的内容，简单来说：content2中的内容就是将文件中的
    #内容按照矩阵元素的方式进行存储了。
    content2 = []
    for item in content:
        item = item.split('\t')
        content2.append(item)
        
    
    #Transpose the content matrix
    logger.debug("file name =" + fileName)
    #第二个for循环先固定每一列的index，然后在内层第一个循环中取content2中的每一行，取每一行的第index个元素作为contentT中第index个元素，从而达到矩阵转置的目的
    
    #调试这个文件：LP08-136-3-pos-1ul-C1-10.txt，他的252行有些问题，只有33列的数据，正常应该是34列的数据，这个文件中第252行的QuantInfo这列木有数据
    logger.debug("Total Columns = " + str(len(content2[0]) - 1))
    cnt = 0
    lenCol = len(content2[0])
    for x in content2:
        cnt = cnt + 1
        lenx = len(x)
        if(lenx < lenCol):
            logger.debug("<=======>")
            logger.debug("lenx = " + str(lenx) + ", lenCol = " + str(lenCol))
            logger.debug("cnt = " + str(cnt))
            logger.debug("line = " + str(x))
            logger.debug("<=======>")
        
    
        
    contentT = [[x[i] for x in content2] for i in range(len(content2[0]))]
    lineNum = 0
    logger.debug("After transpose:")
    for item in contentT:        
        lineNum += 1
        itemLen = len(item)
        #print lineNum, ":", itemLen, ":" , item
        logger.debug("%d:%d:%s" % (lineNum, itemLen, str(item)))
    
    for item in contentT:
        header = item[0]
        item.pop(0)
        dataDict[header] = item
        
        
    return dataDict


if __name__ == "__main__":
    logger.info("Start to extract data from lipid text file")
    loadTextFile("lipid-data-4lines.txt")